{"version":3,"sources":["index.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","tf","threshold","_load_model","_asyncToGenerator","_callee","model","_context","loadGraphModel","apply","arguments","classesDir","1","id","2","App","_React$Component","_getPrototypeOf2","_this","_classCallCheck","_len","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","concat","videoRef","React","createRef","canvasRef","detectFrame","video","startScope","executeAsync","process_input","predictions","renderPredictions","requestAnimationFrame","endScope","ctx","current","getContext","clearRect","canvas","width","height","font","textBaseline","boxes","arraySync","scores","classes","dataSync","detections","buildDetectedObjects","item","x","strokeStyle","lineWidth","strokeRect","fillStyle","textWidth","measureText","toFixed","textHeight","parseInt","fillRect","fillText","_inherits","_createClass","key","_this2","navigator","mediaDevices","getUserMedia","webCamPromise","audio","facingMode","stream","window","srcObject","reject","onloadedmetadata","modelPromise","load_model","all","error","console","video_frame","fromPixels","toInt","transpose","expandDims","detectionObjects","document","getElementById","score","bbox","minY","offsetHeight","minX","offsetWidth","maxY","maxX","class","label","createElement","style","className","autoPlay","playsInline","muted","ref","Component","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.c547ec19.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport {loadGraphModel} from '@tensorflow/tfjs-converter';\r\nimport \"./styles.css\";\r\ntf.setBackend('webgl');\r\n\r\nconst threshold = 0.75;\r\n\r\nasync function load_model() {\r\n    // It's possible to load the model locally or from a repo\r\n    // You can choose whatever IP and PORT you want in the \"http://127.0.0.1:8080/model.json\" just set it before in your https server\r\n    //const model = await loadGraphModel(\"http://127.0.0.1:8080/model.json\");\r\n    const model = await loadGraphModel(\"https://raw.githubusercontent.com/hugozanini/TFJS-object-detection/master/models/kangaroo-detector/model.json\");\r\n    return model;\r\n  }\r\n\r\nlet classesDir = {\r\n    1: {\r\n        name: 'Kangaroo',\r\n        id: 1,\r\n    },\r\n    2: {\r\n        name: 'Other',\r\n        id: 2,\r\n    }\r\n}\r\n\r\nclass App extends React.Component {\r\n  videoRef = React.createRef();\r\n  canvasRef = React.createRef();\r\n\r\n\r\n  componentDidMount() {\r\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n      const webCamPromise = navigator.mediaDevices\r\n        .getUserMedia({\r\n          audio: false,\r\n          video: {\r\n            facingMode: \"user\"\r\n          }\r\n        })\r\n        .then(stream => {\r\n          window.stream = stream;\r\n          this.videoRef.current.srcObject = stream;\r\n          return new Promise((resolve, reject) => {\r\n            this.videoRef.current.onloadedmetadata = () => {\r\n              resolve();\r\n            };\r\n          });\r\n        });\r\n\r\n      const modelPromise = load_model();\r\n\r\n      Promise.all([modelPromise, webCamPromise])\r\n        .then(values => {\r\n          this.detectFrame(this.videoRef.current, values[0]);\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }\r\n\r\n    detectFrame = (video, model) => {\r\n        tf.engine().startScope();\r\n        model.executeAsync(this.process_input(video)).then(predictions => {\r\n        this.renderPredictions(predictions, video);\r\n        requestAnimationFrame(() => {\r\n          this.detectFrame(video, model);\r\n        });\r\n        tf.engine().endScope();\r\n      });\r\n  };\r\n\r\n  process_input(video_frame){\r\n    const tfimg = tf.browser.fromPixels(video_frame).toInt();\r\n    const expandedimg = tfimg.transpose([0,1,2]).expandDims();\r\n    return expandedimg;\r\n  };\r\n\r\n  buildDetectedObjects(scores, threshold, boxes, classes, classesDir) {\r\n    const detectionObjects = []\r\n    var video_frame = document.getElementById('frame');\r\n\r\n    scores[0].forEach((score, i) => {\r\n      if (score > threshold) {\r\n        const bbox = [];\r\n        const minY = boxes[0][i][0] * video_frame.offsetHeight;\r\n        const minX = boxes[0][i][1] * video_frame.offsetWidth;\r\n        const maxY = boxes[0][i][2] * video_frame.offsetHeight;\r\n        const maxX = boxes[0][i][3] * video_frame.offsetWidth;\r\n        bbox[0] = minX;\r\n        bbox[1] = minY;\r\n        bbox[2] = maxX - minX;\r\n        bbox[3] = maxY - minY;\r\n        detectionObjects.push({\r\n          class: classes[i],\r\n          label: classesDir[classes[i]].name,\r\n          score: score.toFixed(4),\r\n          bbox: bbox\r\n        })\r\n      }\r\n    })\r\n    return detectionObjects\r\n  }\r\n\r\n  renderPredictions = predictions => {\r\n    const ctx = this.canvasRef.current.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n    // Font options.\r\n    const font = \"16px sans-serif\";\r\n    ctx.font = font;\r\n    ctx.textBaseline = \"top\";\r\n\r\n    //Getting predictions\r\n    const boxes = predictions[4].arraySync();\r\n    const scores = predictions[5].arraySync();\r\n    const classes = predictions[6].dataSync();\r\n    const detections = this.buildDetectedObjects(scores, threshold,\r\n                                    boxes, classes, classesDir);\r\n\r\n    detections.forEach(item => {\r\n      const x = item['bbox'][0];\r\n      const y = item['bbox'][1];\r\n      const width = item['bbox'][2];\r\n      const height = item['bbox'][3];\r\n\r\n      // Draw the bounding box.\r\n      ctx.strokeStyle = \"#00FFFF\";\r\n      ctx.lineWidth = 4;\r\n      ctx.strokeRect(x, y, width, height);\r\n\r\n      // Draw the label background.\r\n      ctx.fillStyle = \"#00FFFF\";\r\n      const textWidth = ctx.measureText(item[\"label\"] + \" \" + (100 * item[\"score\"]).toFixed(2) + \"%\").width;\r\n      const textHeight = parseInt(font, 10); // base 10\r\n      ctx.fillRect(x, y, textWidth + 4, textHeight + 4);\r\n    });\r\n\r\n    detections.forEach(item => {\r\n      const x = item['bbox'][0];\r\n      const y = item['bbox'][1];\r\n\r\n      // Draw the text last to ensure it's on top.\r\n      ctx.fillStyle = \"#000000\";\r\n      ctx.fillText(item[\"label\"] + \" \" + (100*item[\"score\"]).toFixed(2) + \"%\", x, y);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Real-Time Object Detection: Kangaroo</h1>\r\n        <h3>MobileNetV2</h3>\r\n        <video\r\n          style={{height: '600px', width: \"500px\"}}\r\n          className=\"size\"\r\n          autoPlay\r\n          playsInline\r\n          muted\r\n          ref={this.videoRef}\r\n          width=\"600\"\r\n          height=\"500\"\r\n          id=\"frame\"\r\n        />\r\n        <canvas\r\n          className=\"size\"\r\n          ref={this.canvasRef}\r\n          width=\"600\"\r\n          height=\"500\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}